name: Build and Deploy to EC2

on:
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Configuração do JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'  # Alterado para temurin

      # 3. Rodar o build com Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 4. Copiar o arquivo .jar para EC2 usando SCP
      - name: Copy .jar to EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa target/*.jar ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/app/

      # 5. Parar a aplicação anterior, caso esteja rodando
      - name: Parar aplicação anterior, se rodando
        run: |
          ssh -t -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Verifica e para qualquer processo utilizando a porta 8080
            PID=$(sudo lsof -t -i:8080)
            if [ -n "$PID" ]; then
              echo "Parando a aplicação antiga (PID: $PID)..."
              sudo kill -9 $PID
            else
              echo "Nenhuma aplicação encontrada na porta 8080."
            fi
          EOF

      # 6. Rodar a aplicação na EC2
      - name: Start application on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'cd /home/ubuntu/app && nohup java -jar *.jar > app.log 2>&1 &'
