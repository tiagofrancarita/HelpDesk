name: Build and Deploy to EC2

on:
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Configuração do JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Rodar o build com Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 4. Copiar o arquivo .jar para EC2 usando SCP
      - name: Copy .jar to EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa target/*.jar ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/app/

      # 5. Parar a aplicação anterior, caso esteja rodando
      - name: Stop previous application
        run: |
          ssh -t -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            PID=$(sudo lsof -t -i:8080)
            if [ -n "$PID" ]; then
              echo "Stopping previous application (PID: $PID)..."
              sudo kill -9 $PID
            else
              echo "No application running on port 8080."
            fi
          EOF

      # 6. Rodar a aplicação na EC2 com timeout de 5 minutos
      - name: Start application on EC2
        run: |
          timeout=300  # Tempo máximo de espera (5 minutos)
          interval=10  # Intervalo de verificação (10 segundos)

          # Inicia a aplicação em segundo plano
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'cd /home/ubuntu/app && nohup java -jar *.jar > app.log 2>&1 &'

          # Verifica se a aplicação está rodando dentro do timeout
          end=$((SECONDS + timeout))
          while [ $SECONDS -lt $end ]; do
            echo "Checking if the application is running..."
            if ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'pgrep -f java' > /dev/null; then
              echo "Application is running!"
              exit 0
            fi
            sleep $interval
          done

          # Após o timeout, verifica uma última vez
          echo "Timeout reached. Verifying if the application is running..."
          if ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'pgrep -f java' > /dev/null; then
            echo "Application is running despite timeout!"
            exit 0
          else
            echo "Application failed to start within 5 minutes."
            exit 1
          fi
